a = float(input("range start"))
b = float(input("range end"))
s = float(input("step"))
func = input("function")

dif = 0.00001

#This makes a weird issue as the last value will go beyond the end of the interval if the values do not come out right on
n = int((b-a)//s) + 1
print(n)


#make x list
xvals=[]

#fill x list
for i in range(0,n):
    xvals.append(a + i*s)

#make y list
y=[]

#fill y list
for i in range(0,n):
    x = a + i*s
    y.append(eval(func))
 
#makes f' lst
f1 = []

#fill f' list
for i in range(0,n):
    x = a + i*s + dif
    f1y1 = eval(func)
    x = a + i*s - dif
    f1y2 = eval(func)
    
    f1Val = (f1y1-f1y2)/(2*dif)
    f1.append(f1Val)

#make f'' list
f2 = []

#fill f'' list
for i in range (0,n):
    x = a + i*s + dif
    f2y1 = eval(func)
    
    x = a + i*s - dif
    f2y2 = eval(func)
    
    x = a + i*s
    f2y3 = eval(func)
    
    #To find this equation simply plug the first derivative back into itself....if that makes sense.
    f2Val = (f2y1 - 2*f2y3 +f2y2)/(dif**2)
    f2.append(f2Val)

#SHOULD WE ROUND???


print(xvals)
print(y)
print(f1)
print(f2)